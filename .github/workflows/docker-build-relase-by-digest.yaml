name: java-docker-release
on:
  workflow_call:
    inputs:
      github_repository:
        description: "Default Github environment variable - repository"
        required: true
        type: string            
      docker_build_args:
        description: "Define Docker build arguments"
        required: false
        type: string        
      docker_context:
        description: "Specifies the base directory for Docker image building"
        default: "."
        required: false
        type: string
      docker_cache_from:
        description: "Source for Docker layer caching. Useful for accelerating builds by reusing previously cached layers. Set as 'type=gha' to enable GitHub Actions cache."
        required: false
        type: string
        default: "type=gha"
      docker_cache_to:
        description: "Destination for storing Docker cache layers. Set as 'type=gha,mode=max' to push all layers back to GitHub Actions cache, maximizing cache reuse across builds."
        required: false
        type: string
        default: "type=gha,mode=max"
      docker_digest_suffix:
        description: "Docker image digest suffix"
        required: true
        type: string
      docker_image_name:
        description: "The name of the Docker image to be built and pushed, typically in the format 'owner/repository'. This variable is required for setting the target image repository."
        required: true
        type: string
      docker_image_tags:
        description: "Specifies the tagging strategy for Docker images. This can include semantic versioning, branch names, dates, or SHA values. By default, tags may follow semantic versioning patterns or use custom date and commit-based formats."
        required: false
        type: string
      docker_provenance:
        description: "Specifies the provenance mode for Docker builds, providing reproducibility and traceability metadata. Use 'mode=max' to include detailed build information."
        required: false
        type: string
        default: "mode=max"
      docker_platform:
        description: "Specifies the Docker platform for image building"
        default: linux/amd64
        required: false
        type: string
      docker_platform_name:
        description: "Specifies the Docker platform name"
        default: linux-amd64
        required: false
        type: string              
      docker_registry_url:
        description: "Specifies the docker registry url to push the docker image."
        required: true
        type: string
      docker_sbom:
        description: "Generate a Software Bill of Materials (SBOM) for the Docker image, enhancing security and transparency by listing dependencies and packages."
        required: false
        type: string
        default: "true"
      docker_file_name:
        description: "Specifies the path to the Dockerfile used in the image building process"
        default: "./Dockerfile"
        required: false
        type: string
      docker_push_enabled:
        description: "Specifies the path to the Dockerfile used in the image building process"
        default: false
        required: false
        type: boolean  
      os_version:
        description: "Container operating system"
        default: "ubuntu-latest"
        required: false
        type: string
    secrets:
      DOCKER_REGISTRY_USERNAME:
        required: true
      DOCKER_REGISTRY_TOKEN:
        required: true        
jobs:
  build:
    runs-on: ${{ inputs.os_version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set up Qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup variables
        id: setup_vars
        run: |
          platform=${{ inputs.docker_platform }}
          echo "platform=${platform//\//-}" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.docker_image_name }}
          tags: ${{ inputs.docker_image_tags }}       
        
      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker_registry_url }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
          
      - name: Build Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          build-args: ${{ inputs.docker_build_args }}
          cache-from: ${{ inputs.docker_cache_from }}
          cache-to: ${{ inputs.docker_cache_to }}
          context: ${{ inputs.docker_context }}
          file: ${{ inputs.docker_file_name }}
          platforms: ${{ inputs.docker_platform }}
          outputs: type=image,name=${{ inputs.docker_image_name }},push-by-digest=true,name-canonical=true,push=${{ inputs.docker_push_enabled }}
          labels: ${{ steps.metadata.outputs.labels }}
          provenance: ${{ inputs.docker_provenance }}
          sbom: ${{ inputs.docker_sbom }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
        
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ steps.setup_vars.outputs.platform }}-${{ inputs.docker_digest_suffix }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1          